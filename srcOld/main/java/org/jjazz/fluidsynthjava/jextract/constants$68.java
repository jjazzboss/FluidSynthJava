// Generated by jextract

package org.jjazz.fluidsynthjava.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$68 {

    static final FunctionDescriptor fluid_voice_is_playing$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_voice_is_playing$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_voice_is_playing",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$68.fluid_voice_is_playing$FUNC, false
    );
    static final FunctionDescriptor fluid_voice_is_on$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_voice_is_on$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_voice_is_on",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$68.fluid_voice_is_on$FUNC, false
    );
    static final FunctionDescriptor fluid_voice_is_sustained$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_voice_is_sustained$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_voice_is_sustained",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$68.fluid_voice_is_sustained$FUNC, false
    );
    static final FunctionDescriptor fluid_voice_is_sostenuto$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_voice_is_sostenuto$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_voice_is_sostenuto",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$68.fluid_voice_is_sostenuto$FUNC, false
    );
    static final FunctionDescriptor fluid_voice_optimize_sample$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_voice_optimize_sample$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_voice_optimize_sample",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$68.fluid_voice_optimize_sample$FUNC, false
    );
    static final FunctionDescriptor fluid_voice_update_param$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle fluid_voice_update_param$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_voice_update_param",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$68.fluid_voice_update_param$FUNC, false
    );
}


