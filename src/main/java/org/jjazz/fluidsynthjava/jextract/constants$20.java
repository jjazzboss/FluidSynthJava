// Generated by jextract

package org.jjazz.fluidsynthjava.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$20 {

    static final FunctionDescriptor fluid_synth_set_polyphony$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle fluid_synth_set_polyphony$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_synth_set_polyphony",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$20.fluid_synth_set_polyphony$FUNC, false
    );
    static final FunctionDescriptor fluid_synth_get_polyphony$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_synth_get_polyphony$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_synth_get_polyphony",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$20.fluid_synth_get_polyphony$FUNC, false
    );
    static final FunctionDescriptor fluid_synth_get_active_voice_count$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_synth_get_active_voice_count$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_synth_get_active_voice_count",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$20.fluid_synth_get_active_voice_count$FUNC, false
    );
    static final FunctionDescriptor fluid_synth_get_internal_bufsize$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_synth_get_internal_bufsize$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_synth_get_internal_bufsize",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$20.fluid_synth_get_internal_bufsize$FUNC, false
    );
    static final FunctionDescriptor fluid_synth_set_interp_method$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle fluid_synth_set_interp_method$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_synth_set_interp_method",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$20.fluid_synth_set_interp_method$FUNC, false
    );
    static final FunctionDescriptor fluid_synth_add_default_mod$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle fluid_synth_add_default_mod$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_synth_add_default_mod",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$20.fluid_synth_add_default_mod$FUNC, false
    );
}


