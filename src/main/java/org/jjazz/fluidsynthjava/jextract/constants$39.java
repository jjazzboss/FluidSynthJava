// Generated by jextract

package org.jjazz.fluidsynthjava.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$39 {

    static final FunctionDescriptor fluid_sample_set_name$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fluid_sample_set_name$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sample_set_name",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$39.fluid_sample_set_name$FUNC, false
    );
    static final FunctionDescriptor fluid_sample_set_sound_data$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_SHORT
    );
    static final MethodHandle fluid_sample_set_sound_data$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sample_set_sound_data",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIS)I",
        constants$39.fluid_sample_set_sound_data$FUNC, false
    );
    static final FunctionDescriptor fluid_sample_set_loop$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle fluid_sample_set_loop$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sample_set_loop",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$39.fluid_sample_set_loop$FUNC, false
    );
    static final FunctionDescriptor fluid_sample_set_pitch$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle fluid_sample_set_pitch$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sample_set_pitch",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$39.fluid_sample_set_pitch$FUNC, false
    );
    static final FunctionDescriptor fluid_audio_func_t$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_audio_func_t$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$39.fluid_audio_func_t$FUNC, false
    );
}


