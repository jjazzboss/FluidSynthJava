// Generated by jextract

package org.jjazz.fluidsynthjava.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$61 {

    static final FunctionDescriptor fluid_sequencer_send_at$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle fluid_sequencer_send_at$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_send_at",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$61.fluid_sequencer_send_at$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_remove_events$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_SHORT,
        C_SHORT,
        C_INT
    );
    static final MethodHandle fluid_sequencer_remove_events$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_remove_events",
        "(Ljdk/incubator/foreign/MemoryAddress;SSI)V",
        constants$61.fluid_sequencer_remove_events$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_get_tick$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_sequencer_get_tick$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_get_tick",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$61.fluid_sequencer_get_tick$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_set_time_scale$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_DOUBLE
    );
    static final MethodHandle fluid_sequencer_set_time_scale$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_set_time_scale",
        "(Ljdk/incubator/foreign/MemoryAddress;D)V",
        constants$61.fluid_sequencer_set_time_scale$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_get_time_scale$FUNC = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER
    );
    static final MethodHandle fluid_sequencer_get_time_scale$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_get_time_scale",
        "(Ljdk/incubator/foreign/MemoryAddress;)D",
        constants$61.fluid_sequencer_get_time_scale$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_register_fluidsynth$FUNC = FunctionDescriptor.of(C_SHORT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fluid_sequencer_register_fluidsynth$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_register_fluidsynth",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)S",
        constants$61.fluid_sequencer_register_fluidsynth$FUNC, false
    );
}


