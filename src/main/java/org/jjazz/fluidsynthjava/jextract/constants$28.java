// Generated by jextract

package org.jjazz.fluidsynthjava.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$28 {

    static final FunctionDescriptor fluid_usershell$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fluid_usershell$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_usershell",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$28.fluid_usershell$FUNC, false
    );
    static final FunctionDescriptor delete_fluid_shell$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle delete_fluid_shell$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "delete_fluid_shell",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$28.delete_fluid_shell$FUNC, false
    );
    static final FunctionDescriptor new_fluid_server$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle new_fluid_server$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "new_fluid_server",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$28.new_fluid_server$FUNC, false
    );
    static final FunctionDescriptor new_fluid_server2$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle new_fluid_server2$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "new_fluid_server2",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$28.new_fluid_server2$FUNC, false
    );
    static final FunctionDescriptor delete_fluid_server$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle delete_fluid_server$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "delete_fluid_server",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$28.delete_fluid_server$FUNC, false
    );
    static final FunctionDescriptor fluid_server_join$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_server_join$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_server_join",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$28.fluid_server_join$FUNC, false
    );
}


