// Generated by jextract

package org.jjazz.fluidsynthjava.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$27 {

    static final FunctionDescriptor new_fluid_cmd_handler2$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle new_fluid_cmd_handler2$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "new_fluid_cmd_handler2",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$27.new_fluid_cmd_handler2$FUNC, false
    );
    static final FunctionDescriptor delete_fluid_cmd_handler$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle delete_fluid_cmd_handler$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "delete_fluid_cmd_handler",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$27.delete_fluid_cmd_handler$FUNC, false
    );
    static final FunctionDescriptor fluid_cmd_handler_set_synth$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fluid_cmd_handler_set_synth$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_cmd_handler_set_synth",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$27.fluid_cmd_handler_set_synth$FUNC, false
    );
    static final FunctionDescriptor fluid_command$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle fluid_command$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_command",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$27.fluid_command$FUNC, false
    );
    static final FunctionDescriptor fluid_source$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fluid_source$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_source",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$27.fluid_source$FUNC, false
    );
    static final FunctionDescriptor new_fluid_shell$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle new_fluid_shell$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "new_fluid_shell",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;III)Ljdk/incubator/foreign/MemoryAddress;",
        constants$27.new_fluid_shell$FUNC, false
    );
}


