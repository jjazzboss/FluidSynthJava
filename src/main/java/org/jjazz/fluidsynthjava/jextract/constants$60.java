// Generated by jextract

package org.jjazz.fluidsynthjava.jextract;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$60 {

    static final FunctionDescriptor fluid_sequencer_count_clients$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fluid_sequencer_count_clients$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_count_clients",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$60.fluid_sequencer_count_clients$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_get_client_id$FUNC = FunctionDescriptor.of(C_SHORT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle fluid_sequencer_get_client_id$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_get_client_id",
        "(Ljdk/incubator/foreign/MemoryAddress;I)S",
        constants$60.fluid_sequencer_get_client_id$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_get_client_name$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_SHORT
    );
    static final MethodHandle fluid_sequencer_get_client_name$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_get_client_name",
        "(Ljdk/incubator/foreign/MemoryAddress;S)Ljdk/incubator/foreign/MemoryAddress;",
        constants$60.fluid_sequencer_get_client_name$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_client_is_dest$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_SHORT
    );
    static final MethodHandle fluid_sequencer_client_is_dest$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_client_is_dest",
        "(Ljdk/incubator/foreign/MemoryAddress;S)I",
        constants$60.fluid_sequencer_client_is_dest$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_process$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle fluid_sequencer_process$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_process",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$60.fluid_sequencer_process$FUNC, false
    );
    static final FunctionDescriptor fluid_sequencer_send_now$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fluid_sequencer_send_now$MH = RuntimeHelper.downcallHandle(
        fluidsynth_h.LIBRARIES, "fluid_sequencer_send_now",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$60.fluid_sequencer_send_now$FUNC, false
    );
}


